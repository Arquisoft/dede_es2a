name: CI for ASW2122
on:
  release:
    types: [published]

jobs:
  unit-test-webapp:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: webapp
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm ci
    - run: npm test
    - uses: codecov/codecov-action@v2
  unit-test-restapi:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: restapi
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm ci
    - run: npm test
    - uses: codecov/codecov-action@v2
  e2e-tests:
    needs: [unit-test-webapp, unit-test-restapi]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm --prefix webapp install
    - run: npm --prefix restapi install
    - run: npm --prefix webapp run build
    - run: npm --prefix webapp run test:e2e
  deploy-webapp:
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy webapp
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.DEPLOY_KEY }}
        heroku_app_name: "dede-es2a-webapp"
        heroku_email: ${{ secrets.EMAIL }}
        usedocker: true
        appdir: "webapp"     
        docker_build_args: |
          API_URI
      env:
        API_URI: "https://dede-es2a-restapi.herokuapp.com"
  deploy-restapi:
    needs: [e2e-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy restapi
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.DEPLOY_KEY }}
        heroku_app_name: "dede-es2a-restapi"
        heroku_email: ${{ secrets.EMAIL }}
        usedocker: true
        appdir: "restapi"
        docker_build_args: |
          MONGO_URI
          CLOUDINARY_NAME
          CLOUDINARY_API_KEY
          CLOUDINARY_API_SECRET
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        CLOUDINARY_NAME: ${{ secrets.CLOUD_NAME }}
        CLOUDINARY_API_KEY: ${{ secrets.CLOUD_KEY }}
        CLOUDINARY_API_SECRET: ${{ secrets.CLOUD_SECRET }}
